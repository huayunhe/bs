<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bs.mapper.PictureWaterLevelMapper">
  <resultMap id="BaseResultMap" type="com.example.bs.entity.PictureWaterLevel">
    <id column="picture_id" jdbcType="INTEGER" property="pictureId" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="camera_id" jdbcType="INTEGER" property="cameraId" />
    <result column="ruler_id" jdbcType="INTEGER" property="rulerId" />
  </resultMap>
  <resultMap id="PictureWaterLevelToCameraAndRulerMap" type="com.example.bs.core.PictureWaterLevelToCameraAndRuler">
    <id column="picture_id" jdbcType="INTEGER" property="pictureId" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="camera_id" jdbcType="INTEGER" property="cameraId" />
    <result column="ruler_id" jdbcType="INTEGER" property="rulerId" />
    <result column="camera_adder" jdbcType="VARCHAR" property="cameraAdder" />
  </resultMap>

  <sql id="Base_Column_List">
    picture_id, picture_url, camera_id, ruler_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from picture_water_level
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from picture_water_level
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.bs.entity.PictureWaterLevel">
    insert into picture_water_level (picture_id, picture_url, camera_id, 
      ruler_id)
    values (#{pictureId,jdbcType=INTEGER}, #{pictureUrl,jdbcType=VARCHAR}, #{cameraId,jdbcType=INTEGER}, 
      #{rulerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.bs.entity.PictureWaterLevel">
    insert into picture_water_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pictureId != null">
        picture_id,
      </if>
      <if test="pictureUrl != null">
        picture_url,
      </if>
      <if test="cameraId != null">
        camera_id,
      </if>
      <if test="rulerId != null">
        ruler_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pictureId != null">
        #{pictureId,jdbcType=INTEGER},
      </if>
      <if test="pictureUrl != null">
        #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="cameraId != null">
        #{cameraId,jdbcType=INTEGER},
      </if>
      <if test="rulerId != null">
        #{rulerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bs.entity.PictureWaterLevel">
    update picture_water_level
    <set>
      <if test="pictureUrl != null">
        picture_url = #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="cameraId != null">
        camera_id = #{cameraId,jdbcType=INTEGER},
      </if>
      <if test="rulerId != null">
        ruler_id = #{rulerId,jdbcType=INTEGER},
      </if>
    </set>
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bs.entity.PictureWaterLevel">
    update picture_water_level
    set picture_url = #{pictureUrl,jdbcType=VARCHAR},
      camera_id = #{cameraId,jdbcType=INTEGER},
      ruler_id = #{rulerId,jdbcType=INTEGER}
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="PictureWaterLevelToCameraAndRulerMap">
    select
    a.picture_id, a.picture_url, a.camera_id, a.ruler_id, b.camera_adder
    from picture_water_level a, camera b where a.camera_id=b.camera_id
  </select>
</mapper>